import styled from "styled-components";
import { PHONE_BORDER, PHONE_BORDER1, PHONE_BORDER11, PHONE_BORDER12, PHONE_BORDER13, PHONE_BORDER2 } from "../../assets";

export default () => {
    return (
        <Ul>
            <Item data-wow-delay="0.2s" className="wow animate__fadeIn">
                <Video muted={true} loop={true} src={`${process.env.PUBLIC_URL}/video/video1.mp4`} autoPlay={true}></Video>
                <Mask>
                    <ItemTitle>High Scalability</ItemTitle>
                    Utilizing the RGB protocol, BitRGB implements customizable off-chain smart contracts, storing specific transaction data off-chain and using the Bitcoin blockchain solely as a commitment layer. This approach enables BitRGB to establish a more efficient and scalable Bitcoin smart contract ecosystem, facilitating more effective Bitcoin asset issuance and trading.
                </Mask>
            </Item>
            <Item2 data-wow-delay="0.2s" className="wow animate__fadeIn">
                <Video muted={true} loop={true} src={`${process.env.PUBLIC_URL}/video/video2.mp4`} autoPlay={true}></Video>
                <Mask2>
                    <ItemTitle>Inheriting Bitcoin Mainnet Security</ItemTitle>
                    Built upon the RGB protocol's single-use-seals concept, BitRGB combines asset ownership with Bitcoin UTXOs. By combining client-side validation with transaction commitments submitted to the Bitcoin blockchain, BitRGB prevents double spending. BitRGB assets benefit from the robust security provided by the entire Bitcoin blockchain hash power, inheriting the exceptionally high security of the Bitcoin network.
                </Mask2>
            </Item2>
            <Item data-wow-delay="0.2s" className="wow animate__fadeIn">
                <Video muted={true} loop={true} src={`${process.env.PUBLIC_URL}/video/video3.mp4`} autoPlay={true}></Video>
                <Mask3>
                    <ItemTitle>Privacy Protection Implementation</ItemTitle>
                    BitRGB prioritizes user privacy using blinded UTXOs and the zero-knowledge Bulletproof mechanism from Blockstream. When a recipient requests payment, the sender doesn't disclose the UTXO for receiving tokens but transfers them to a UTXO generated by the recipient, ensuring transaction privacy during verification and preventing future asset owners from accessing histories.
                </Mask3>
            </Item>
        </Ul>
    )
}

const Ul = styled.ul`
    display: none;
    margin-top: 24px;
    list-style: none;
    @media screen and (max-width:960px){
        display: block;
    }
`
const Item = styled.li`
    position: relative;
    margin-bottom: 257px;
`
const Item2 = styled.li`
    position: relative;
    margin-bottom: 294px;
`
const Video = styled.video`
    width: 343px;
    height: 193px;
    border-radius: 24px;
    border: solid 2px #3d4147;
    background-color: #0d121a;
    @media screen and (max-width:960px){
        width:100%;
        height:auto ;
    }
`
const Mask = styled.div`
    width: 311px;
    position: absolute;
    left:16.6px;
  
  z-index: 2;
  background-image: url(${PHONE_BORDER11});
  background-size: 100% 100%;
  top:140px;
  -webkit-backdrop-filter: blur(10px);
  backdrop-filter: blur(10px);
  box-sizing: border-box;
  padding: 16px 12px;
  font-size: 14px;
  font-weight: 500;
  color: #fff;
  border-radius: 18px;
  @media screen and (max-width:960px){
    left:50%;
    transform: translateX(-50%);
  }
`
const ItemTitle = styled.div`
    width: 580px;
    font-family: AvenirNext;
    font-size: 32px;
    font-weight: 600;
    color: #fff;
    margin-bottom: 10px;
    @media screen and (max-width:960px){
        width:100%;
        font-size: 20px;
        line-height:1.3;
    }
`
const Mask2 = styled(Mask)`
      background-image: url(${PHONE_BORDER12});
`
const Mask3 = styled(Mask)`
  background-image: url(${PHONE_BORDER13});
`
const Text = styled.div`
    font-family: AvenirNext;
  font-size: 20px;
  font-weight: 600;
  color:#fff;
  position: absolute;
  z-index: 2;
  left:16.6px;
  top:97px;
`
const Text2 = styled(Text)`
    top: 70px;
`